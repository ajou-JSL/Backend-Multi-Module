services:
  chatmodule:
    image: openjdk:17-jdk-slim
    container_name: chatmodule-container-green
    working_dir: /chatmodule
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8071:8070"
    environment:
      SPRING_PROFILES_ACTIVE: "${SPRING_PROFILES_ACTIVE}"
      SPRING_R2DBC_URL: "${SPRING_R2DBC_URL}"
      SPRING_R2DBC_USERNAME: "${SPRING_R2DBC_USERNAME}"
      SPRING_R2DBC_PASSWORD: "${SPRING_R2DBC_PASSWORD}"
      SPRING_REDIS_HOST: "${SPRING_REDIS_HOST}"
      SPRING_DATA_MONGODB_HOST: "${SPRING_DATA_MONGODB_HOST}"
      SPRING_DATA_MONGODB_USERNAME: "${SPRING_DATA_MONGODB_USERNAME}"
      SPRING_DATA_MONGODB_PASSWORD: "${SPRING_DATA_MONGODB_PASSWORD}"
      SPRING_DATA_MONGODB_AUTHENTICATION_DATABASE: "${SPRING_DATA_MONGODB_AUTHENTICATION_DATABASE}"
      SPRING_JWT_SECRET: "${SPRING_JWT_SECRET}"
    depends_on:
      - mysql
      - redis
    networks:
      - app-network

  mysql:
    image: mysql:8.0
    container_name: mysql-container-green
    environment:
      MYSQL_ROOT_PASSWORD: "zpzzgjdg@$$^1"
      MYSQL_DATABASE: "${MYSQL_DATABASE}"
    ports:
      - "3301:3306"
#    volumes:
#      - mysql_data_blue:/var/lib/mysql
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: redis-container-green
    ports:
      - "6371:6379"
    networks:
      - app-network

  chatdb:
    image: mongo:latest
    container_name: mongo-container-green
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${SPRING_DATA_MONGODB_USERNAME}"
      MONGO_INITDB_ROOT_PASSWORD: "${SPRING_DATA_MONGODB_PASSWORD}"
      MONGO_INITDB_DATABASE: chatdb
    ports:
      - "27011:27017"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
#
#volumes:
#  mysql_data_blue: