version: '3.1'

services:
  chatmodule:
    image: openjdk:17-jdk-slim
    container_name: chatmodule-container
    working_dir: /chatmodule
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8071:8070"
    environment:
      SPRING_PROFILES_ACTIVE: "${SPRING_PROFILES_ACTIVE}"
      SPRING_R2DBC_URL: "${SPRING_R2DBC_URL}"
      SPRING_R2DBC_USERNAME: "${SPRING_R2DBC_USERNAME}"
      SPRING_R2DBC_PASSWORD: "${SPRING_R2DBC_PASSWORD}"
      SPRING_REDIS_HOST: "${SPRING_REDIS_HOST}"
      SPRING_DATA_MONGODB_HOST: "${SPRING_DATA_MONGODB_HOST}"
      SPRING_DATA_MONGODB_USERNAME: "${SPRING_DATA_MONGODB_USERNAME}"
      SPRING_DATA_MONGODB_PASSWORD: "${SPRING_DATA_MONGODB_PASSWORD}"
      SPRING_DATA_MONGODB_AUTHENTICATION_DATABASE: "${SPRING_DATA_MONGODB_AUTHENTICATION_DATABASE}"
      SPRING_JWT_SECRET: "${SPRING_JWT_SECRET}"
    depends_on:
      - mysql
      - redis
    networks:
      - app-network

  mysql:
    image: mysql:8.0
    container_name: mysql-container
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      MYSQL_DATABASE: "${MYSQL_DATABASE}"
    ports:
      - "${MYSQL_PORT}:3306"
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: redis-container
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - app-network

  chatdb:
    image: mongo:latest
    container_name: mongo-container
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${SPRING_DATA_MONGODB_USERNAME}"
      MONGO_INITDB_ROOT_PASSWORD: "${SPRING_DATA_MONGODB_PASSWORD}"
      MONGO_INITDB_DATABASE: chatdb
    ports:
      - "${MONGO_PORT}:27017"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge